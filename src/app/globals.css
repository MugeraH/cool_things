@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 240 10% 3.9%;

    --card: 0 0% 100%;
    --card-foreground: 240 10% 3.9%;

    --popover: 0 0% 100%;
    --popover-foreground: 240 10% 3.9%;

    --primary: 240 5.9% 10%;
    --primary-foreground: 0 0% 98%;

    --secondary: 240 4.8% 95.9%;
    --secondary-foreground: 240 5.9% 10%;

    --muted: 240 4.8% 95.9%;
    --muted-foreground: 240 3.8% 46.1%;

    --accent: 240 4.8% 95.9%;
    --accent-foreground: 240 5.9% 10%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;

    --border: 240 5.9% 90%;
    --input: 240 5.9% 90%;
    --ring: 240 10% 3.9%;

    --radius: 0.5rem;
  }

  .dark {
    --background: 240 10% 3.9%;
    --foreground: 0 0% 98%;

    --card: 240 10% 3.9%;
    --card-foreground: 0 0% 98%;

    --popover: 240 10% 3.9%;
    --popover-foreground: 0 0% 98%;

    --primary: 0 0% 98%;
    --primary-foreground: 240 5.9% 10%;

    --secondary: 240 3.7% 15.9%;
    --secondary-foreground: 0 0% 98%;

    --muted: 240 3.7% 15.9%;
    --muted-foreground: 240 5% 64.9%;

    --accent: 240 3.7% 15.9%;
    --accent-foreground: 0 0% 98%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;

    --border: 240 3.7% 15.9%;
    --input: 240 3.7% 15.9%;
    --ring: 240 4.9% 83.9%;
  }
}

.ProseMirror {
  padding: 10px !important;
  padding-left: 20px !important;
  padding-right: 20px !important;
  font-size: 1rem !important;
}
.ProseMirror p.is-editor-empty:first-child::before {
  content: attr(data-placeholder);
  float: left;
  height: 0;
  pointer-events: none;
}

.ProseMirror strong {
  color: #ffff;
}

.ProseMirror code {
  background-color: #0e303a;
  color: white;
  padding: 3px 4px;
  border-radius: 4px;
  font-family: monospace;
}
.ProseMirror pre {
  background-color: #0e303a;
  padding: 10px;
  border-radius: 4px;
  overflow-x: auto;
}
.ProseMirror pre code {
  background-color: transparent;
  padding: 0;
  border-radius: 0;
  color: white;
}
.ProseMirror blockquote {
  border-left: 4px solid #ffff;
  padding-left: 1rem;
  color: #fff;
  font-style: italic;
  margin: 1rem 0;
}
.ProseMirror a {
  color: rgb(0, 140, 255);
}

.parsed-html h1 {
  @apply text-2xl font-bold my-4;
}

.parsed-html h2 {
  @apply text-xl font-bold my-4;
}

.parsed-html h3 {
  @apply text-lg font-bold my-4;
}

.parsed-html h4 {
  @apply text-base font-bold my-4;
}

.parsed-html p {
  @apply text-base leading-relaxed my-2;
}

.parsed-html img {
  @apply max-w-full h-auto my-4 block;
}

.parsed-html code {
  @apply bg-gray-100 px-2 py-1 rounded font-mono;
}

.parsed-html ul {
  @apply list-disc my-4 pl-8;
}

.parsed-html ul li {
  @apply my-2;
}

.parsed-html ol {
  @apply list-decimal my-4 pl-8;
}

.parsed-html ol li {
  @apply my-2;
}

.parsed-html blockquote {
  @apply border-l-4 border-gray-300 pl-4 my-4 text-gray-600 italic;
}

.parsed-html pre {
  @apply bg-gray-100 p-4 rounded overflow-x-auto font-mono;
}

.parsed-html a {
  @apply text-blue-600 no-underline hover:underline;
}

.parsed-html table {
  @apply border-collapse w-full my-4;
}

.parsed-html th,
.parsed-html td {
  @apply border border-gray-300 px-2 py-1 text-left;
}

.parsed-html th {
  @apply bg-gray-100 font-bold;
}

.wrapper {
  display: grid;
  place-items: center;

  height: 90dvh;
  grid-template-columns: minmax(0, 1fr);
}

.slider-container {
  background-color: #000;
  border-radius: 3rem;
  padding: 4rem;
  width: 980px;
  max-width: 95%;
  height: 500px;
  max-height: 80dvh;
  margin: 0 auto;
  display: grid;
  grid-template-columns: 4fr 1fr 1fr;
  transition: grid-template-columns 800ms cubic-bezier(0.22, 0.61, 0.36, 1);
}

.slider-container:has(
    .slide:nth-child(2):hover,
    .slide:nth-child(2):focus-within
  ) {
  grid-template-columns: 1fr 4fr 1fr;
}

.slider-container:has(
    .slide:nth-child(3):hover,
    .slide:nth-child(3):focus-within
  ) {
  grid-template-columns: 1fr 1fr 4fr;
}

.slide {
  padding: 0 0.25rem;
  background-color: #141414;
  overflow: clip;
  height: 100%;
  position: relative;
  cursor: pointer;
  display: grid;
  container: slide / inline-size;
}

.slide img {
  border-radius: 2rem;
  object-fit: cover;
  width: 100%;
  height: 100%;
  grid-area: 1/1;
}

.slide a {
  margin-bottom: 3rem;
  margin-right: 3rem;
  background: #fff;
  border-radius: 2rem;
  padding: 1.5rem 3rem;
  text-decoration: none;
  color: #000;
  font-size: 1.5rem;
  transform-origin: bottom right;
  display: flex;
  align-items: center;
  gap: 0.3rem;
  outline: none;

  position: absolute;
  grid-area: 1/1;
  place-self: end;

  transform: scale(0);
  opacity: 0;
  transition: 300ms cubic-bezier(0.22, 0.61, 0.36, 1);
  transition-property: transform, opacity;
}

@container (max-width: 400px) {
  .slide a {
    font-size: 1.1rem;
    padding: 0.8rem 1.5rem;
  }
}

.slide:hover a,
.slide:focus-within a {
  transform: scale(1);
  opacity: 1;
  transition-delay: 200ms;
}

.slide:nth-child(1):not(:has(~ .slide:hover, ~ .slide:focus-within)) a {
  transform: scale(1);
  opacity: 1;
}

.card {
  width: 240px;
  height: 200px;
  background: radial-gradient(
      circle at calc(var(--x) * 1px) calc(var(--y) * 1px),
      hsl(0 0% 100%/0.15)
    ),
    hsl(0 0% 10%);
  font-weight: bold;
  display: flex;
  justify-content: center;
  font-size: 14px;
  border-radius: 5%;
  align-items: center;
}

/* a:after {
  display: block;
  content: "";
  width: inherit;
  border-bottom: solid 3px black;
  transform: scaleX(0);
  transition: transform 250ms ease-in-out;
}

a:hover:after {
  transform: scaleX(1);
} */

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}
